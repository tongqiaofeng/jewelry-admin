{"remainingRequest":"G:\\aa-tong\\my-project\\JewelryAdminWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\aa-tong\\my-project\\JewelryAdminWeb\\src\\components\\Warehouse-management.vue?vue&type=template&id=18d36186&scoped=true&","dependencies":[{"path":"G:\\aa-tong\\my-project\\JewelryAdminWeb\\src\\components\\Warehouse-management.vue","mtime":1652852233719},{"path":"G:\\aa-tong\\my-project\\JewelryAdminWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\JewelryAdminWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\JewelryAdminWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\JewelryAdminWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}