{"remainingRequest":"G:\\aa-tong\\my-project\\jewelry-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\aa-tong\\my-project\\jewelry-admin\\src\\components\\Sales-report.vue?vue&type=template&id=5e682e51&scoped=true&","dependencies":[{"path":"G:\\aa-tong\\my-project\\jewelry-admin\\src\\components\\Sales-report.vue","mtime":1640074630384},{"path":"G:\\aa-tong\\my-project\\jewelry-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\jewelry-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\jewelry-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\jewelry-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InN0b2NrLXBlbmRpbmctY29udGFpbmVyIj4KICA8IS0tIDxoMT7plIDllK7miqXooag8L2gxPiAtLT4KICA8ZGl2IHN0eWxlPSJkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICA8ZWwtZm9ybSA6aW5saW5lPSJ0cnVlIiBsYWJlbC13aWR0aD0iOTVweCI+CiAgICAgIDxlbC1mb3JtLWl0ZW0gbGFiZWw9Iue7n+iuoeW4geenje+8miI+CiAgICAgICAgPGVsLXNlbGVjdAogICAgICAgICAgdi1tb2RlbD0iY3VycmVuY3lTZWwiCiAgICAgICAgICBwbGFjZWhvbGRlcj0i6K+36YCJ5oupIgogICAgICAgICAgQGNoYW5nZT0ia2V5d29yZENoYW5nZSIKICAgICAgICAgIDpwb3BwZXItYXBwZW5kLXRvLWJvZHk9ImZhbHNlIgogICAgICAgID4KICAgICAgICAgIDxlbC1vcHRpb24KICAgICAgICAgICAgdi1mb3I9Iml0ZW0gaW4gY3VycmVuY3lTZWxMaXN0IgogICAgICAgICAgICA6a2V5PSJpdGVtLmlkIgogICAgICAgICAgICA6bGFiZWw9Iml0ZW0ubmFtZSIKICAgICAgICAgICAgOnZhbHVlPSJpdGVtLmlkIgogICAgICAgICAgPgogICAgICAgICAgPC9lbC1vcHRpb24+CiAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLkuqflk4HnsbvliKvvvJoiPgogICAgICAgIDxlbC1zZWxlY3QKICAgICAgICAgIHYtbW9kZWw9InByb2R1Y3RUeXBlIgogICAgICAgICAgcGxhY2Vob2xkZXI9Iuivt+mAieaLqSIKICAgICAgICAgIEBjaGFuZ2U9ImtleXdvcmRDaGFuZ2UiCiAgICAgICAgICA6cG9wcGVyLWFwcGVuZC10by1ib2R5PSJmYWxzZSIKICAgICAgICA+CiAgICAgICAgICA8ZWwtb3B0aW9uCiAgICAgICAgICAgIHYtZm9yPSJpdGVtIGluIHByb2R1Y3RUeXBlTGlzdCIKICAgICAgICAgICAgOmtleT0iaXRlbS5pZCIKICAgICAgICAgICAgOmxhYmVsPSJpdGVtLm5hbWUiCiAgICAgICAgICAgIDp2YWx1ZT0iaXRlbS5pZCIKICAgICAgICAgID4KICAgICAgICAgIDwvZWwtb3B0aW9uPgogICAgICAgIDwvZWwtc2VsZWN0PgogICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6ZSA5ZSu57uE77yaIj4KICAgICAgICA8ZWwtc2VsZWN0CiAgICAgICAgICB2LW1vZGVsPSJncm91cCIKICAgICAgICAgIHBsYWNlaG9sZGVyPSLor7fpgInmi6kiCiAgICAgICAgICBAY2hhbmdlPSJrZXl3b3JkQ2hhbmdlIgogICAgICAgICAgOnBvcHBlci1hcHBlbmQtdG8tYm9keT0iZmFsc2UiCiAgICAgICAgPgogICAgICAgICAgPGVsLW9wdGlvbgogICAgICAgICAgICB2LWZvcj0iaXRlbSBpbiBncm91cExpc3QiCiAgICAgICAgICAgIDprZXk9Iml0ZW0iCiAgICAgICAgICAgIDpsYWJlbD0iaXRlbSIKICAgICAgICAgICAgOnZhbHVlPSJpdGVtIgogICAgICAgICAgPgogICAgICAgICAgPC9lbC1vcHRpb24+CiAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLplIDllK7ml7bpl7TvvJoiPgogICAgICAgIDxlbC1kYXRlLXBpY2tlcgogICAgICAgICAgdi1tb2RlbD0idGltZSIKICAgICAgICAgIHR5cGU9Im1vbnRocmFuZ2UiCiAgICAgICAgICByYW5nZS1zZXBhcmF0b3I9IuiHsyIKICAgICAgICAgIHN0YXJ0LXBsYWNlaG9sZGVyPSLlvIDlp4vmnIjku70iCiAgICAgICAgICBlbmQtcGxhY2Vob2xkZXI9Iue7k+adn+aciOS7vSIKICAgICAgICAgIGZvcm1hdD0ieXl5eS1NTSIKICAgICAgICAgIHZhbHVlLWZvcm1hdD0ieXl5eS1NTSIKICAgICAgICAgIEBjaGFuZ2U9ImtleXdvcmRDaGFuZ2UiCiAgICAgICAgICBjbGVhcmFibGUKICAgICAgICA+CiAgICAgICAgPC9lbC1kYXRlLXBpY2tlcj4KICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgIDxlbC1mb3JtLWl0ZW0+CiAgICAgICAgPGVsLWJ1dHRvbgogICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyIKICAgICAgICAgIHR5cGU9InByaW1hcnkiCiAgICAgICAgICBAY2xpY2s9ImdldFNhbGVzTGlzdCIKICAgICAgICAgID7mn6Ug6K+iPC9lbC1idXR0b24KICAgICAgICA+CiAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgPC9lbC1mb3JtPgogICAgPGRpdj4KICAgICAgPGVsLWJ1dHRvbiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9InJlcG9ydERhdGEiPuWvvOWHuuaVsOaNrjwvZWwtYnV0dG9uPgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPGVsLXRhYnMgdi1tb2RlbD0iYWN0aXZlVGFiTmFtZSIgQHRhYi1jbGljaz0iaGFuZGxlQ2xpY2siPgogICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLlj6/nu5PnrpciIG5hbWU9ImZpcnN0Ij4KICAgICAgPGRpdj4KICAgICAgICA8ZGl2CiAgICAgICAgICBjbGFzcz0idG90YWwtc3R5bGUiCiAgICAgICAgICB2LWlmPSJzYWxlc0xpc3QubGVuZ3RoID4gMCAmJiBjdXJyZW5jeVNlbCA9PSAxIgogICAgICAgID4KICAgICAgICAgIDxkaXYgY2xhc3M9InN0eWxlLWV2ZXJ5Ij7mgLvmlbDph4/vvJp7eyB0b3RhbCB9fTwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0ic3R5bGUtZXZlcnkiPgogICAgICAgICAgICDkurrmsJHluIHplIDllK7pop3vvJp7eyBmb3JtYXROdW1iZXJSZ3godG90YWxTYWxlTW9uZXkpICsgIiBDTlkiIH19CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InN0eWxlLWV2ZXJ5Ij4KICAgICAgICAgICAg5oC75Yip5ram77yae3sgZm9ybWF0TnVtYmVyUmd4KHRvdGFsUHJvZml0KSArICIgQ05ZIiB9fQogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdgogICAgICAgICAgY2xhc3M9InRvdGFsLXN0eWxlIgogICAgICAgICAgdi1pZj0ic2FsZXNMaXN0Lmxlbmd0aCA+IDAgJiYgY3VycmVuY3lTZWwgPT0gMiIKICAgICAgICA+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzdHlsZS1ldmVyeSI+5oC75pWw6YeP77yae3sgdG90YWwgfX08L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InN0eWxlLWV2ZXJ5Ij4KICAgICAgICAgICAg5riv5biB6ZSA5ZSu6aKd77yae3sgZm9ybWF0TnVtYmVyUmd4KHRvdGFsU2FsZU1vbmV5KSArICIgSEtEIiB9fQogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzdHlsZS1ldmVyeSI+CiAgICAgICAgICAgIOaAu+WIqea2pu+8mnt7IGZvcm1hdE51bWJlclJneCh0b3RhbFByb2ZpdCkgKyAiIEhLRCIgfX0KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxlbC10YWJsZQogICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDAlOyIKICAgICAgICAgIHJlZj0ibXVsdGlwbGVUYWJsZSIKICAgICAgICAgIDpkYXRhPSJzYWxlc0xpc3QiCiAgICAgICAgICB0b29sdGlwLWVmZmVjdD0iZGFyayIKICAgICAgICAgIEByb3ctY2xpY2s9ImhhbmRsZURldmljZUxpc3RDaGFuZ2UiCiAgICAgICAgICBib3JkZXIKICAgICAgICA+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InByb2R1Y3ROdW1iZXIiIGxhYmVsPSLnu5/kuIDnvJblj7ciPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLlm77niYciIHdpZHRoPSIxMjBweCI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgdi1pZj0ic2NvcGUucm93LmltZyAhPSAnJyIKICAgICAgICAgICAgICAgICAgOnNyYz0iYXhpb3NVcmwgKyAnL2ZpbGUvJyArIGltZ0ZpbGx0ZXIoc2NvcGUucm93LmltZylbMF0iCiAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMTAwcHg7aGVpZ2h0OiAxMDBweDtvYmplY3QtZml0OiBjb3ZlcjsiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InByb2R1Y3ROYW1lIiBsYWJlbD0i5Lqn5ZOB5ZCN56ewIj4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPSJ0eXBlIiBsYWJlbD0i5Lqn5ZOB57G75YirIj4gPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InBhcmFtcyIgbGFiZWw9IuWPguaVsCI+PC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InN0b2NrSW5UaW1lIiBsYWJlbD0i5YWl5bqT5pe26Ze0Ij4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPSJzdG9ja091dFRpbWUiIGxhYmVsPSLplIDllK7ml7bpl7QiPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLmiJDmnKwiPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgIDxkaXYgOnN0eWxlPSJ7IGNvbG9yOiBzY29wZS5yb3cuY29zdCA9PSAwID8gJ3JlZCcgOiAnIzY2NicgfSI+CiAgICAgICAgICAgICAgICB7eyBmb3JtYXROdW1iZXJSZ3goc2NvcGUucm93LmNvc3QpICsgIiAiCiAgICAgICAgICAgICAgICB9fXt7IGN1cnJlbmN5U2VsID09IDEgPyAiQ05ZIiA6ICJIS0QiIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuacgOS9juWUruS7tyI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cubG93ZXN0U2VsbFByaWNlKSArICIgQ05ZIiB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLmibnlj5Hku7ciPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICB7eyBmb3JtYXROdW1iZXJSZ3goc2NvcGUucm93LmFkdmljZVdob2xlc2FsZVByaWNlKSArICIgQ05ZIiB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLpm7bllK7ku7ciPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICB7eyBmb3JtYXROdW1iZXJSZ3goc2NvcGUucm93LmFkdmlzZVNlbGxQcmljZSkgKyAiIENOWSIgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5Ye65bqT5Lu3Ij4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAge3sKICAgICAgICAgICAgICAgICAgZm9ybWF0TnVtYmVyUmd4KHNjb3BlLnJvdy5zYWxlTW9uZXkpICsKICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgIHNjb3BlLnJvdy5zYWxlQ3VycmVuY3kKICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuS6uuawkeW4geWHuuW6k+S7tyIgdi1pZj0iY3VycmVuY3lTZWwgPT0gMSI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cuc2FsZUNueU9ySGtkTW9uZXkpICsgIiBDTlkiIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9Iua4r+W4geWHuuW6k+S7tyIgdi1pZj0iY3VycmVuY3lTZWwgPT0gMiI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cuc2FsZUNueU9ySGtkTW9uZXkpICsgIiBIS0QiIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuWIqea2piI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdiA6c3R5bGU9InsgY29sb3I6IHNjb3BlLnJvdy5wcm9maXQgPCAwID8gJ3JlZCcgOiAnIzY2NicgfSI+CiAgICAgICAgICAgICAgICB7ewogICAgICAgICAgICAgICAgICBzY29wZS5yb3cucHJvZml0ID09IDAKICAgICAgICAgICAgICAgICAgICA/ICItLSIKICAgICAgICAgICAgICAgICAgICA6IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cucHJvZml0KSArCiAgICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgICAgKGN1cnJlbmN5U2VsID09IDEgPyAiQ05ZIiA6ICJIS0QiKQogICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5Yip5ram546HIj4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICA6c3R5bGU9InsgY29sb3I6IHNjb3BlLnJvdy5wcm9maXRSYXRlIDwgMCA/ICdyZWQnIDogJyM2NjYnIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAge3sKICAgICAgICAgICAgICAgICAgc2NvcGUucm93LnByb2ZpdFJhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgID8gIi0tIgogICAgICAgICAgICAgICAgICAgIDogc2NvcGUucm93LnByb2ZpdFJhdGUgKyAiJSIKICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0iY3VzdG9tZXIiIGxhYmVsPSLkubDlrrYiPiA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0ic29sZGVyIiBsYWJlbD0i6ZSA5ZSu5ZGYIj4gPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9Imdyb3VwIiBsYWJlbD0i57uEIj4gPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLmk43kvZwiPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICMzZDgxZmQ7Y3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgICAgQGNsaWNrPSJkZWxTYWxlKHNjb3BlLnJvdy5pZCkiCiAgICAgICAgICAgICAgICAgID7mkqTplIDplIDllK48L3NwYW4KICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgIDwvZWwtdGFibGU+CiAgICAgICAgPGRpdiBzdHlsZT0id2lkdGg6IDEwMCU7aGVpZ2h0OiA1MHB4OyI+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46MTVweCAwO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjYlOyI+CiAgICAgICAgICAgIDxlbC1wYWdpbmF0aW9uCiAgICAgICAgICAgICAgQGN1cnJlbnQtY2hhbmdlPSJoYW5kbGVDdXJyZW50Q2hhbmdlIgogICAgICAgICAgICAgIDpjdXJyZW50LXBhZ2U9InBhZ2UiCiAgICAgICAgICAgICAgbGF5b3V0PSJ0b3RhbCwgcHJldiwgcGFnZXIsIG5leHQsIGp1bXBlciIKICAgICAgICAgICAgICA6dG90YWw9InRvdGFsIgogICAgICAgICAgICA+CiAgICAgICAgICAgIDwvZWwtcGFnaW5hdGlvbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZWwtdGFiLXBhbmU+CiAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IuS4jeWPr+e7k+eulyIgbmFtZT0ic2Vjb25kIj4KICAgICAgPGRpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0b3RhbC1zdHlsZSIgdi1pZj0ic2FsZXNMaXN0Lmxlbmd0aCA+IDAiPgogICAgICAgICAgPGRpdiBjbGFzcz0ic3R5bGUtZXZlcnkiPuaAu+aVsOmHj++8mnt7IHRvdGFsIH19PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGVsLXRhYmxlCiAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCU7IgogICAgICAgICAgcmVmPSJtdWx0aXBsZVRhYmxlIgogICAgICAgICAgOmRhdGE9InNhbGVzTGlzdCIKICAgICAgICAgIHRvb2x0aXAtZWZmZWN0PSJkYXJrIgogICAgICAgICAgQHJvdy1jbGljaz0iaGFuZGxlRGV2aWNlTGlzdENoYW5nZSIKICAgICAgICAgIGJvcmRlcgogICAgICAgID4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0icHJvZHVjdE51bWJlciIgbGFiZWw9Iue7n+S4gOe8luWPtyI+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuWbvueJhyIgd2lkdGg9IjEyMHB4Ij4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICB2LWlmPSJzY29wZS5yb3cuaW1nICE9ICcnIgogICAgICAgICAgICAgICAgICA6c3JjPSJheGlvc1VybCArICcvZmlsZS8nICsgaW1nRmlsbHRlcihzY29wZS5yb3cuaW1nKVswXSIKICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDBweDtoZWlnaHQ6IDEwMHB4O29iamVjdC1maXQ6IGNvdmVyOyIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0icHJvZHVjdE5hbWUiIGxhYmVsPSLkuqflk4HlkI3np7AiPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InR5cGUiIGxhYmVsPSLkuqflk4HnsbvliKsiPiA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0icGFyYW1zIiBsYWJlbD0i5Y+C5pWwIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0ic3RvY2tJblRpbWUiIGxhYmVsPSLlhaXlupPml7bpl7QiPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InN0b2NrT3V0VGltZSIgbGFiZWw9IumUgOWUruaXtumXtCI+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuaIkOacrCI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdiA6c3R5bGU9InsgY29sb3I6IHNjb3BlLnJvdy5jb3N0ID09IDAgPyAncmVkJyA6ICcjNjY2JyB9Ij4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cuY29zdCkgKyAiICIKICAgICAgICAgICAgICAgIH19e3sgY3VycmVuY3lTZWwgPT0gMSA/ICJDTlkiIDogIkhLRCIgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5pyA5L2O5ZSu5Lu3Ij4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAge3sgZm9ybWF0TnVtYmVyUmd4KHNjb3BlLnJvdy5sb3dlc3RTZWxsUHJpY2UpICsgIiBDTlkiIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuaJueWPkeS7tyI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cuYWR2aWNlV2hvbGVzYWxlUHJpY2UpICsgIiBDTlkiIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IumbtuWUruS7tyI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cuYWR2aXNlU2VsbFByaWNlKSArICIgQ05ZIiB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLlh7rlupPku7ciPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICB7ewogICAgICAgICAgICAgICAgICBmb3JtYXROdW1iZXJSZ3goc2NvcGUucm93LnNhbGVNb25leSkgKwogICAgICAgICAgICAgICAgICAgICIgIiArCiAgICAgICAgICAgICAgICAgICAgc2NvcGUucm93LnNhbGVDdXJyZW5jeQogICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5Lq65rCR5biB5Ye65bqT5Lu3IiB2LWlmPSJjdXJyZW5jeVNlbCA9PSAxIj4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IHNjb3BlLnJvdy5zYWxlQ255T3JIa2RNb25leSA9PSAwID8gJ3JlZCcgOiAnIzY2NicsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIHt7IGZvcm1hdE51bWJlclJneChzY29wZS5yb3cuc2FsZUNueU9ySGtkTW9uZXkpICsgIiBDTlkiIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9Iua4r+W4geWHuuW6k+S7tyIgdi1pZj0iY3VycmVuY3lTZWwgPT0gMiI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBzY29wZS5yb3cuc2FsZUNueU9ySGtkTW9uZXkgPT0gMCA/ICdyZWQnIDogJyM2NjYnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICB7eyBmb3JtYXROdW1iZXJSZ3goc2NvcGUucm93LnNhbGVDbnlPckhrZE1vbmV5KSArICIgSEtEIiB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLliKnmtqYiPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICB7ewogICAgICAgICAgICAgICAgICBzY29wZS5yb3cuY29zdCA9PSAwIHx8IHNjb3BlLnJvdy5zYWxlQ255T3JIa2RNb25leSA9PSAwCiAgICAgICAgICAgICAgICAgICAgPyAiLS0iCiAgICAgICAgICAgICAgICAgICAgOiBmb3JtYXROdW1iZXJSZ3goc2NvcGUucm93LnByb2ZpdCkgKwogICAgICAgICAgICAgICAgICAgICAgIiAiICsKICAgICAgICAgICAgICAgICAgICAgIChjdXJyZW5jeVNlbCA9PSAxID8gIkNOWSIgOiAiSEtEIikKICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuWIqea2pueOhyI+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIHt7CiAgICAgICAgICAgICAgICAgIHNjb3BlLnJvdy5jb3N0ID09IDAgfHwgc2NvcGUucm93LnNhbGVDbnlPckhrZE1vbmV5ID09IDAKICAgICAgICAgICAgICAgICAgICA/ICItLSIKICAgICAgICAgICAgICAgICAgICA6IHNjb3BlLnJvdy5wcm9maXRSYXRlICsgIiUiCiAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9ImN1c3RvbWVyIiBsYWJlbD0i5Lmw5a62Ij4gPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9InNvbGRlciIgbGFiZWw9IumUgOWUruWRmCI+IDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPSJncm91cCIgbGFiZWw9Iue7hCI+IDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5pON5L2cIj4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjM2Q4MWZkO2N1cnNvcjogcG9pbnRlcjsiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0iZGVsU2FsZShzY29wZS5yb3cuaWQpIgogICAgICAgICAgICAgICAgICA+5pKk6ZSA6ZSA5ZSuPC9zcGFuCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICA8L2VsLXRhYmxlPgogICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOiAxMDAlO2hlaWdodDogNTBweDsiPgogICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luOjE1cHggMDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDo2JTsiPgogICAgICAgICAgICA8ZWwtcGFnaW5hdGlvbgogICAgICAgICAgICAgIEBjdXJyZW50LWNoYW5nZT0iaGFuZGxlQ3VycmVudENoYW5nZSIKICAgICAgICAgICAgICA6Y3VycmVudC1wYWdlPSJwYWdlIgogICAgICAgICAgICAgIGxheW91dD0idG90YWwsIHByZXYsIHBhZ2VyLCBuZXh0LCBqdW1wZXIiCiAgICAgICAgICAgICAgOnRvdGFsPSJ0b3RhbCIKICAgICAgICAgICAgPgogICAgICAgICAgICA8L2VsLXBhZ2luYXRpb24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2VsLXRhYi1wYW5lPgogIDwvZWwtdGFicz4KICA8ZWwtZGlhbG9nCiAgICB2LWlmPSJkaWFsb2dEZWxTYWxlc1Zpc2libGUiCiAgICB0aXRsZT0i5pKk6ZSA6ZSA5ZSuIgogICAgOnZpc2libGUuc3luYz0iZGlhbG9nRGVsU2FsZXNWaXNpYmxlIgogICAgOmNsb3NlLW9uLXByZXNzLWVzY2FwZT0iZmFsc2UiCiAgICA6Y2xvc2Utb24tY2xpY2stbW9kYWw9ImZhbHNlIgogICAgOm1vZGFsLWFwcGVuZC10by1ib2R5PSJmYWxzZSIKICAgIDphcHBlbmQtdG8tYm9keT0iZmFsc2UiCiAgICBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4IgogICAgaWQ9ImRlbFNhbGUiCiAgPgogICAgPGRpdiBjbGFzcz0iZGVsLXN0eWxlIj4KICAgICAg56Gu5a6a5pKk6ZSA6K+l6ZSA5ZSu6K6w5b2V5ZCX77yf56Gu5a6a5ZCO5LiN5Y+v5L+u5pS5CiAgICA8L2Rpdj4KICAgIDxkaXYgc2xvdD0iZm9vdGVyIj4KICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9ImRpYWxvZ0RlbFNhbGVzVmlzaWJsZSA9IGZhbHNlIj7lj5Yg5raIPC9lbC1idXR0b24+CiAgICAgIDxlbC1idXR0b24gdHlwZT0icHJpbWFyeSIgQGNsaWNrPSJkZWxTYWxlU3VyZSI+56GuIOWumjwvZWwtYnV0dG9uPgogICAgPC9kaXY+CiAgPC9lbC1kaWFsb2c+CiAgPGVsLWRpYWxvZwogICAgdi1pZj0iZGlhbG9nSW52ZW50b3J5Q2hlY2tWaXNpYmxlIgogICAgaWQ9Im1zZyIKICAgIHRpdGxlPSLmiJDlk4Hkv6Hmga8iCiAgICA6dmlzaWJsZS5zeW5jPSJkaWFsb2dJbnZlbnRvcnlDaGVja1Zpc2libGUiCiAgICA6Y2xvc2Utb24tcHJlc3MtZXNjYXBlPSJmYWxzZSIKICAgIDpjbG9zZS1vbi1jbGljay1tb2RhbD0iZmFsc2UiCiAgICA6bW9kYWwtYXBwZW5kLXRvLWJvZHk9ImZhbHNlIgogICAgOmFwcGVuZC10by1ib2R5PSJmYWxzZSIKICA+CiAgICA8ZGl2IGlkPSJpbnZlblNvbWUiPgogICAgICA8ZWwtdGFicyBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiIHYtbW9kZWw9ImFjdGl2ZVN0b2NrTmFtZSI+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLmiJDlk4Hkv6Hmga8iIG5hbWU9ImZpcnN0Ij4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICAgIOaIkOWTgeS/oeaBrwogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiA2cHg7Ij4KICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgIHRpdGxlPSLkv67mlLnmiJDlk4Hkv6Hmga8iCiAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2hvbWUvdXBkYXRlLnBuZyIKICAgICAgICAgICAgICAgIEBjbGljaz0idXBkYXRlRGV2aWNlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmiJDlk4HlkI3np7AKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLnByb2R1Y3ROYW1lIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmoIfnrb4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLXNlbGVjdAogICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCU7IgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJsYWJlbFNlbExpc3QiCiAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuWPr+WkmumAiSIKICAgICAgICAgICAgICAgICAgbXVsdGlwbGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGVsLW9wdGlvbgogICAgICAgICAgICAgICAgICAgIHYtZm9yPSJpdGVtIGluIHByb2R1Y3RMYWJlbExpc3QiCiAgICAgICAgICAgICAgICAgICAgOmtleT0iaXRlbSIKICAgICAgICAgICAgICAgICAgICA6bGFiZWw9Iml0ZW0iCiAgICAgICAgICAgICAgICAgICAgOnZhbHVlPSJpdGVtIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZWwtb3B0aW9uPgogICAgICAgICAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg6K6+6K6h5ZCN56ew77yaCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICBAZm9jdXM9ImNob29zZWltZ3Nob3cgPSB0cnVlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC5kZXNpZ25OYW1lIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzYwNjI2NicsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDorr7orqHluIjvvJoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLmRlc2lnbmVyTmFtZSIKICAgICAgICAgICAgICAgICAgcmVhZG9ubHkKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6CiAgICAgICAgICAgICAgICAgICAgaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyAnIzYwNjI2NicKICAgICAgICAgICAgICAgICAgICAgIDogaW52ZW50b3J5Q2hlY2tEZXRhaWwuaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyAnIzNkODJmZScKICAgICAgICAgICAgICAgICAgICAgIDogJyM2MDYyNjYnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OgogICAgICAgICAgICAgICAgICAgIGlzVXBkYXRlID09IDAKICAgICAgICAgICAgICAgICAgICAgID8gJ25vcm1hbCcKICAgICAgICAgICAgICAgICAgICAgIDogaW52ZW50b3J5Q2hlY2tEZXRhaWwuaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyAnYm9sZCcKICAgICAgICAgICAgICAgICAgICAgIDogJ25vcm1hbCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWUr+S4gOe8luWPtwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwucHJvZHVjdE51bWJlciIKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSIKICAgICAgICAgICAgICAgICAgICBpc1VwZGF0ZSA9PSAwCiAgICAgICAgICAgICAgICAgICAgICA/IHRydWUKICAgICAgICAgICAgICAgICAgICAgIDogaW52ZW50b3J5Q2hlY2tEZXRhaWwuaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgOiB0cnVlCiAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Y+C5pWwCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0YXJlYSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwucGFyYW1zIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOivgeS5pue8luWPtwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuY2VydGlmaWNhdGVOdW1iZXIiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8cCBjbGFzcz0iZm9udC10aXRsZS1zdHlsZSI+5Zu+54mH5L+h5oGvPC9wPgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPHAKICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgbWFyZ2luOiAwLAogICAgICAgICAgICAgICAgd2lkdGg6ICc5MHB4JywKICAgICAgICAgICAgICB9IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAg5oiQ5ZOB5Zu+54mH77yaCiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgIGNsYXNzPSJ1cGxvYWQtaW1ncyIKICAgICAgICAgICAgICB2LWlmPSJpbnZlbnRvcnlDaGVja0RldGFpbC5pbWcgIT0gJycgfHwgaXNVcGRhdGUgPT0gMSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZCIgdi1pZj0iaXNVcGRhdGUgPT0gMSI+CiAgICAgICAgICAgICAgICA8Zm9ybSBlbmN0eXBlPSJtdWx0aXBhcnQvZm9ybS1kYXRhIiBzdHlsZT0id2lkdGg6IDEwMHB4OyI+CiAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgIEBjaGFuZ2U9ImlucHV0Q2hhbmdlKCRldmVudCkiCiAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGUKICAgICAgICAgICAgICAgICAgICB0eXBlPSJmaWxlIgogICAgICAgICAgICAgICAgICAgIG5hbWU9ImltZyIKICAgICAgICAgICAgICAgICAgICBhY2NlcHQ9ImltYWdlLyoiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImlucHV0VXBsb2FkIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZWwtaWNvbi1wbHVzIGFkZEljb24iPjwvaT4KICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBzdHlsZT0iZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlO2ZsZXgtd3JhcDogd3JhcDsiCiAgICAgICAgICAgICAgICBpZD0iZGVsSW1nIgogICAgICAgICAgICAgICAgY2xhc3M9ImRlbEltZyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtZm9yPSIoaW1ndXJsLCBpbmRleCkgb2YgcHJvZHVjdGltZ0xpc3QiCiAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6MTBweDtwb3NpdGlvbjpyZWxhdGl2ZTsiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1pZj0iaW1ndXJsICE9PSAnJyAmJiBpbWd1cmwgIT09IG51bGwgJiYgaXNVcGRhdGUgPT0gMSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0ic3BhblN0eWxlIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZGVsSW1hZ2UoaW5kZXgpIgogICAgICAgICAgICAgICAgICAgID54PC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgIHYtaWY9ImltZ3VybCAhPT0gJycgJiYgaW1ndXJsICE9PSBudWxsIgogICAgICAgICAgICAgICAgICAgIDpzcmM9ImltZyArICcvZmlsZS8nICsgaW1ndXJsIgogICAgICAgICAgICAgICAgICAgIHdpZHRoPSIxMDBweCIKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjEwMHB4IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXItcmFkaXVzOjVweDtvYmplY3QtZml0OmNvdmVyOyIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHAKICAgICAgICAgICAgICB2LWlmPSJpbnZlbnRvcnlDaGVja0RldGFpbC5pbWcgPT0gJycgJiYgaXNVcGRhdGUgPT0gMCIKICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7Zm9udC1zaXplOiAxM3B4OyIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIOaXoOaIkOWTgeWbvueJhwogICAgICAgICAgICA8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxwCiAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIG1hcmdpbjogMCwKICAgICAgICAgICAgICAgIHdpZHRoOiAnOTBweCcsCiAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIOivpuaDheWbvueJh++8mgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICBjbGFzcz0idXBsb2FkLWltZ3MiCiAgICAgICAgICAgICAgdi1pZj0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuZGV0YWlsSW1nICE9ICcnIHx8IGlzVXBkYXRlID09IDEiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGQiIHYtaWY9ImlzVXBkYXRlID09IDEiPgogICAgICAgICAgICAgICAgPGZvcm0gZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgc3R5bGU9IndpZHRoOiAxMDBweDsiPgogICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPSJpbnB1dENoYW5nZTIoJGV2ZW50KSIKICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZQogICAgICAgICAgICAgICAgICAgIHR5cGU9ImZpbGUiCiAgICAgICAgICAgICAgICAgICAgbmFtZT0iaW1nIgogICAgICAgICAgICAgICAgICAgIGFjY2VwdD0iaW1hZ2UvKiIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW5wdXRVcGxvYWQiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJlbC1pY29uLXBsdXMgYWRkSWNvbiI+PC9pPgogICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIHN0eWxlPSJkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmU7ZmxleC13cmFwOiB3cmFwOyIKICAgICAgICAgICAgICAgIGlkPSJkZWxJbWciCiAgICAgICAgICAgICAgICBjbGFzcz0iZGVsSW1nIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgdi1mb3I9IihpbWd1cmwsIGluZGV4KSBvZiBkZXRhaWxJbWdMaXN0IgogICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OjEwcHg7cG9zaXRpb246cmVsYXRpdmU7IgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtaWY9ImltZ3VybCAhPT0gJycgJiYgaW1ndXJsICE9PSBudWxsICYmIGlzVXBkYXRlID09IDEiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9InNwYW5TdHlsZSIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImRlbEltYWdlMihpbmRleCkiCiAgICAgICAgICAgICAgICAgICAgPng8L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgdi1pZj0iaW1ndXJsICE9PSAnJyAmJiBpbWd1cmwgIT09IG51bGwiCiAgICAgICAgICAgICAgICAgICAgOnNyYz0iaW1nICsgJy9maWxlLycgKyBpbWd1cmwiCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjEwMHB4IgogICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTAwcHgiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6NXB4O29iamVjdC1maXQ6Y292ZXI7IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8cAogICAgICAgICAgICAgIHYtaWY9ImludmVudG9yeUNoZWNrRGV0YWlsLmRldGFpbEltZyA9PSAnJyAmJiBpc1VwZGF0ZSA9PSAwIgogICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDtmb250LXNpemU6IDEzcHg7IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAg5peg6K+m5oOF5Zu+54mHCiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPHAKICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzYwNjI2NicsCiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnbm9ybWFsJywKICAgICAgICAgICAgICAgIG1hcmdpbjogMCwKICAgICAgICAgICAgICAgIHdpZHRoOiAnOTBweCcsCiAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIOiuvuiuoeWbvueJh++8mgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InVwbG9hZC1pbWdzIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICB2LWlmPSJpbnZlbnRvcnlDaGVja0RldGFpbC5kZXNpZ25JbWcgIT0gJyciCiAgICAgICAgICAgICAgICBzdHlsZT0iZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlO2ZsZXgtd3JhcDogd3JhcDsiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICB2LWZvcj0iKGltZ3VybCwgaW5kZXgpIG9mIGltZ0ZpbGx0ZXIoCiAgICAgICAgICAgICAgICAgICAgaW52ZW50b3J5Q2hlY2tEZXRhaWwuZGVzaWduSW1nCiAgICAgICAgICAgICAgICAgICkiCiAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6MTBweDtwb3NpdGlvbjpyZWxhdGl2ZTsiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICB2LWlmPSJpbWd1cmwgIT09ICcnICYmIGltZ3VybCAhPT0gbnVsbCIKICAgICAgICAgICAgICAgICAgICA6c3JjPSJpbWd1cmwiCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjEwMHB4IgogICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTAwcHgiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6NXB4O29iamVjdC1maXQ6Y292ZXI7IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAgdi1lbHNlIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDtmb250LXNpemU6IDEzcHg7Ij4KICAgICAgICAgICAgICAgIOaXoOiuvuiuoeWbvueJhwogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIj7ljp/mnZDmlpnkv6Hmga88L3A+CiAgICAgICAgICA8ZWwtdGFibGUKICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDAlOyIKICAgICAgICAgICAgOmRhdGE9ImludmVudG9yeUNoZWNrRGV0YWlsLm1hdGVyaWFsTGlzdCIKICAgICAgICAgICAgdG9vbHRpcC1lZmZlY3Q9ImRhcmsiCiAgICAgICAgICAgIGJvcmRlcgogICAgICAgICAgICBoaWdobGlnaHQtY3VycmVudC1yb3cKICAgICAgICAgICAgQHJvdy1jbGljaz0iY2hlY2tpbnZlbnRvcnlDaGVja0RldGFpbHMiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0ibmFtZSIgbGFiZWw9IuWQjeensCI+IDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHByb3A9Im51bWJlciIgbGFiZWw9IuaVsOmHjyI+IDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLmn6XnnIvor6bmg4UiPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPSLmn6XnnIvmnZDmlpnkv6Hmga8iIGNsYXNzPSJsb29rIj7mn6XnnIs8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgIDwvZWwtdGFibGU+CiAgICAgICAgICA8cCBjbGFzcz0iZm9udC10aXRsZS1zdHlsZSI+5aSH5rOo5L+h5oGvPC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9udC1kaXYiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lLW5vdGUiIGlkPSJvbmUtbm90ZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOS6p+WTgeWkh+azqAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dGFyZWEiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLm5vdGUiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IuS7t+agvOS/oeaBryIgbmFtZT0iZm91cnRoIj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICAgIOS7t+agvOS/oeaBrwogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiA2cHg7Ij4KICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgIHRpdGxlPSLkv67mlLnku7fmoLzkv6Hmga8iCiAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2hvbWUvdXBkYXRlLnBuZyIKICAgICAgICAgICAgICAgIEBjbGljaz0idXBkYXRlRGV2aWNlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDoo7jnn7PmiJDmnKzluIHnp40KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLXJhZGlvLWdyb3VwCiAgICAgICAgICAgICAgICAgIEBjaGFuZ2U9ImN1cnJlbmN5Q29zdENoYW5nZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuY3VycmVuY3kiCiAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJDTlkiPkNOWTwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iRVVSIj5FVVI8L2VsLXJhZGlvPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IlVTRCI+VVNEPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJIS0QiPkhLRDwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICA8L2VsLXJhZGlvLWdyb3VwPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOijuOefs+aIkOacrAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgQGlucHV0PSJjdXJyZW5jeUNvc3RDaGFuZ2UiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuY29zdFByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGU9IiIKICAgICAgICAgICAgICAgID48L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWKoOW3pei0uShDTlkpCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICBAaW5wdXQ9InRvdGFsQ29zdENuUmF0ZUNoYW5nZSIKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC5wcm9jZXNzQ29zdCIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWkluW4geWFkeS6uuawkeW4geaxh+eOhwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgQGlucHV0PSJ0b3RhbENvc3RDblJhdGVDaGFuZ2UiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwudG90YWxDblJhdGUiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmiJDmnKzkurrmsJHluIHph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwudG90YWxDblByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5riv5biB5YWR5Lq65rCR5biB5rGH546HCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICBAaW5wdXQ9InRvdGFsQ29zdEhrUmF0ZUNoYW5nZSIKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC50b3RhbEhrUmF0ZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOaIkOacrOa4r+W4gemHkeminQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC50b3RhbEhrUHJpY2UiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmnIDkvY7plIDllK7ku7coQ05ZKQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC5sb3dlc3RTZWxsUHJpY2UiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlu7rorq7plIDllK7ku7coQ05ZKQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC5hZHZpc2VTZWxsUHJpY2UiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlu7rorq7mibnlj5Hku7coQ05ZKQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC5hZHZpY2VXaG9sZXNhbGVQcmljZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOagh+etvuS7tyhDTlkpCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLnRhZ1ByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOmUgOWUruaPkOaIkChDTlkpCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLnNhbGVDb21taXNzaW9uIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8cCBjbGFzcz0iZm9udC10aXRsZS1zdHlsZSI+5aSH5rOo5L+h5oGvPC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9udC1kaXYiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lLW5vdGUiIGlkPSJvbmUtbm90ZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOaIkOacrOWkh+azqAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dGFyZWEiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLnRvdGFsUHJpY2VOb3RlIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLplIDllK7kv6Hmga8iIG5hbWU9InRoaXJkIj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICAgIOmUgOWUruS/oeaBrwogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiA2cHg7Ij4KICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgIHRpdGxlPSLkv67mlLnplIDllK7kv6Hmga8iCiAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2hvbWUvdXBkYXRlLnBuZyIKICAgICAgICAgICAgICAgIEBjbGljaz0idXBkYXRlRGV2aWNlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDplIDllK7lkZgKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuc29sZGVyIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg57uECiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLmdyb3VwIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5a6i5oi35aeT5ZCNCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLmN1c3RvbWVyIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Ye65ZSu5biB56eNCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1yYWRpby1ncm91cAogICAgICAgICAgICAgICAgICBAY2hhbmdlPSJjdXJyZW5jeUNoYW5nZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuc2FsZUN1cnJlbmN5IgogICAgICAgICAgICAgICAgICA6ZGlzYWJsZWQ9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iQ05ZIj5DTlk8L2VsLXJhZGlvPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IkVVUiI+RVVSPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJVU0QiPlVTRDwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iSEtEIj5IS0Q8L2VsLXJhZGlvPgogICAgICAgICAgICAgICAgPC9lbC1yYWRpby1ncm91cD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlh7rllK7ph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIEBpbnB1dD0iY3VycmVuY3lDaGFuZ2UiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuc2FsZU1vbmV5IgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5aSW5biB5YWR5Lq65rCR5biB5rGH546HCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICBAaW5wdXQ9InRvdGFsQ25SYXRlQ2hhbmdlIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLnRvdGFsVG9DblJhdGUiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlh7rllK7kurrmsJHluIHph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5Q2hlY2tEZXRhaWwuc2VsbFRvdGFsQ25QcmljZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOa4r+W4geWFkeS6uuawkeW4geaxh+eOhwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgQGlucHV0PSJ0b3RhbEhrUmF0ZUNoYW5nZSIKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlDaGVja0RldGFpbC50b3RhbFRvSGtSYXRlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Ye65ZSu5riv5biB6YeR6aKdCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUNoZWNrRGV0YWlsLnNlbGxUb3RhbEhrUHJpY2UiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i5Y6G5Y+y6K6w5b2VIiBuYW1lPSJzZWNvbmQiPgogICAgICAgICAgPHAgY2xhc3M9ImZvbnQtdGl0bGUtc3R5bGUiIHN0eWxlPSJtYXJnaW4tdG9wOiAwOyI+CiAgICAgICAgICAgIOaIkOWTgeeKtuaAge+8mnt7CiAgICAgICAgICAgICAgaW52ZW50b3J5Q2hlY2tEZXRhaWwuc3RhdGUgPT0gMAogICAgICAgICAgICAgICAgPyAi5bqT5a2Y5LitIgogICAgICAgICAgICAgICAgOiBpbnZlbnRvcnlDaGVja0RldGFpbC5zdGF0ZSA9PSAxCiAgICAgICAgICAgICAgICA/ICLov5DovpPkuK0iCiAgICAgICAgICAgICAgICA6IGludmVudG9yeUNoZWNrRGV0YWlsLnN0YXRlID09IDMKICAgICAgICAgICAgICAgID8gIuWKoOW3peWujOaIkCIKICAgICAgICAgICAgICAgIDogIuW3suWHuuWUriIKICAgICAgICAgICAgfX0KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxlbC10aW1lbGluZT4KICAgICAgICAgICAgPGVsLXRpbWVsaW5lLWl0ZW0KICAgICAgICAgICAgICBjb2xvcj0iIzNkODJmZSIKICAgICAgICAgICAgICBzaXplPSJsYXJnZSIKICAgICAgICAgICAgICB2LWZvcj0iKGFjdGl2aXR5LCBpbmRleCkgaW4gaW52ZW50b3J5Q2hlY2tEZXRhaWwuc3RvY2tJbk91dExpc3QiCiAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiBmbGV4O2FsaWduLWl0ZW1zOiBjZW50ZXI7Ij4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW46MCAyMHB4IDE0cHggMDt3aWR0aDogNzJweDsiPgogICAgICAgICAgICAgICAgICB7eyBhY3Rpdml0eS50aW1lLnNsaWNlKDAsIDEwKSB9fQogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6MCIgdi1odG1sPSJhY3Rpdml0eS5kZXNjcmliZSI+PC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxwCiAgICAgICAgICAgICAgICB2LWlmPSJhY3Rpdml0eS5ub3RlICE9PSAnJyIKICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW46IDA7Y29sb3I6IzkxOTA5MDttYXJnaW4tbGVmdDo5MnB4O3dvcmQtYnJlYWs6IGJyZWFrLWFsbDt3b3JkLXdyYXA6IGJyZWFrLXdvcmQiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAge3sgYWN0aXZpdHkubm90ZSB9fQogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9lbC10aW1lbGluZS1pdGVtPgogICAgICAgICAgPC9lbC10aW1lbGluZT4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICA8L2VsLXRhYnM+CiAgICA8L2Rpdj4KICAgIDxkaXYgc2xvdD0iZm9vdGVyIj4KICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9ImRpYWxvZ0ludmVudG9yeUNoZWNrVmlzaWJsZSA9IGZhbHNlIgogICAgICAgID7lj5Yg5raIPC9lbC1idXR0b24KICAgICAgPgogICAgICA8ZWwtYnV0dG9uIHR5cGU9InByaW1hcnkiIEBjbGljaz0iaW52ZW50b3J5TG9va1N1cmUiIHYtcHJldmVudENsaWNrCiAgICAgICAgPuehriDlrpo8L2VsLWJ1dHRvbgogICAgICA+CiAgICA8L2Rpdj4KICA8L2VsLWRpYWxvZz4KICA8ZWwtZGlhbG9nCiAgICB2LWlmPSJkaWFsb2dEZXZpY2VEZXRhaWxWaXNpYmxlIgogICAgdGl0bGU9IuadkOaWmeS/oeaBryIKICAgIDp2aXNpYmxlLnN5bmM9ImRpYWxvZ0RldmljZURldGFpbFZpc2libGUiCiAgICA6Y2xvc2Utb24tcHJlc3MtZXNjYXBlPSJmYWxzZSIKICAgIDpjbG9zZS1vbi1jbGljay1tb2RhbD0iZmFsc2UiCiAgICA6bW9kYWwtYXBwZW5kLXRvLWJvZHk9ImZhbHNlIgogICAgOmFwcGVuZC10by1ib2R5PSJmYWxzZSIKICA+CiAgICA8ZGl2IGlkPSJpbnZlblNvbWUiPgogICAgICA8ZWwtdGFicyBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiIHYtbW9kZWw9ImFjdGl2ZVN0b2NrTmFtZSI+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLmnZDmlpnkv6Hmga8iIG5hbWU9ImZpcnN0Ij4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICAgIOadkOaWmeS/oeaBrwogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiA2cHg7Ij4KICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgIHRpdGxlPSLkv67mlLnmnZDmlpnkv6Hmga8iCiAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2hvbWUvdXBkYXRlLnBuZyIKICAgICAgICAgICAgICAgIEBjbGljaz0idXBkYXRlRGV2aWNlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzYwNjI2Njtmb250LXdlaWdodDogbm9ybWFsOyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmnZDmlpnlkI3np7AKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5tYXRlcmlhbE5hbWUiCiAgICAgICAgICAgICAgICAgIHJlYWRvbmx5CiAgICAgICAgICAgICAgICA+PC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzYwNjI2Njtmb250LXdlaWdodDogbm9ybWFsOyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDku5PlupMv5Yqg5bel5Y6CCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwuc3RvcmFnZU5hbWUiCiAgICAgICAgICAgICAgICAgIHJlYWRvbmx5CiAgICAgICAgICAgICAgICA+PC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzYwNjI2Njtmb250LXdlaWdodDogbm9ybWFsOyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDnu5/kuIDnvJblj7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImRldmljZURldGFpbC5wcm9kdWN0TnVtYmVyIiByZWFkb25seT4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSIgdi1zaG93PSJjZXJ0aWZpY2F0ZXNob3cyID09IGZhbHNlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5b2i54q2CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5zaGFwZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSIgdi1zaG93PSJjZXJ0aWZpY2F0ZXNob3cyID09IGZhbHNlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Lqn5ZOB57G75Z6LCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5wcm9kdWN0VHlwZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSIgdi1zaG93PSJjZXJ0aWZpY2F0ZXNob3cyID09IGZhbHNlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Lqn5ZywCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5wcm9kdWN0QXJlYSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWwuuWvuC/mr6vnsbMKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnNpemUiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOminOiJsgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwuY29sb3IiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOmFjeWvuQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwucGFpcmVkIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlk4HotKgKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnF1YWxpdHkiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWTgei0qOe7huWIhgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwuc3Vic2VjdGlvbiIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSIgdi1zaG93PSJjZXJ0aWZpY2F0ZXNob3cyID09IGZhbHNlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg55uS5a2Q57yW5Y+3CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5ib3hOdW1iZXIiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOivgeS5pue8luWPtwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwuY2VydGlmaWNhdGVOdW1iZXIiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWPkeelqOWPtwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwuYmlsbE51bWJlciIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPHAgY2xhc3M9ImZvbnQtdGl0bGUtc3R5bGUiPuWbvueJh+S/oeaBrzwvcD4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6ZmxleDsiPgogICAgICAgICAgICA8cAogICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICBtYXJnaW46IDAsCiAgICAgICAgICAgICAgICB3aWR0aDogJzUwcHgnLAogICAgICAgICAgICAgIH0iCiAgICAgICAgICAgID4KICAgICAgICAgICAgICDlm77niYfvvJoKICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1cGxvYWQtaW1ncyI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkIiB2LXNob3c9ImlzVXBkYXRlID09IDEiPgogICAgICAgICAgICAgICAgPGZvcm0gZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgc3R5bGU9IndpZHRoOiAxMDBweDsiPgogICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPSJpbnB1dENoYW5nZSgkZXZlbnQpIgogICAgICAgICAgICAgICAgICAgIG11bHRpcGxlCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iZmlsZSIKICAgICAgICAgICAgICAgICAgICBuYW1lPSJpbWciCiAgICAgICAgICAgICAgICAgICAgYWNjZXB0PSJpbWFnZS8qIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnB1dFVwbG9hZCIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImVsLWljb24tcGx1cyBhZGRJY29uIj48L2k+CiAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgc3R5bGU9ImRpc3BsYXk6ZmxleDtwb3NpdGlvbjpyZWxhdGl2ZTtmbGV4LXdyYXA6IHdyYXA7IgogICAgICAgICAgICAgICAgaWQ9ImRlbEltZyIKICAgICAgICAgICAgICAgIGNsYXNzPSJkZWxJbWciCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICB2LWZvcj0iKGltZ3VybCwgaW5kZXgpIG9mIGltZ0xpc3QiCiAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6MTBweDtwb3NpdGlvbjpyZWxhdGl2ZTsiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1pZj0iaW1ndXJsICE9PSAnJyAmJiBpbWd1cmwgIT09IG51bGwgJiYgaXNVcGRhdGUgPT0gMSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0ic3BhblN0eWxlIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZGVsSW1hZ2UzKGluZGV4KSIKICAgICAgICAgICAgICAgICAgICA+eDwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICB2LWlmPSJpbWd1cmwgIT09ICcnICYmIGltZ3VybCAhPT0gbnVsbCIKICAgICAgICAgICAgICAgICAgICA6c3JjPSJpbWcgKyAnL2ZpbGUvJyArIGltZ3VybCIKICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTAwcHgiCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSIxMDBweCIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLXJhZGl1czo1cHg7b2JqZWN0LWZpdDpjb3ZlcjsiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIj7lpIfms6jkv6Hmga88L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUtbm90ZSIgaWQ9Im9uZS1ub3RlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Lqn5ZOB5aSH5rOoCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0YXJlYSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLm5vdGUiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IuS7t+agvOS/oeaBryIgbmFtZT0iZm91cnRoIj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICAgIOS7t+agvOS/oeaBrwogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiA2cHg7Ij4KICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgIHRpdGxlPSLkv67mlLnku7fmoLzkv6Hmga8iCiAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2hvbWUvdXBkYXRlLnBuZyIKICAgICAgICAgICAgICAgIEBjbGljaz0idXBkYXRlRGV2aWNlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiIHYtc2hvdz0iY2VydGlmaWNhdGVzaG93MiA9PSBmYWxzZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzYwNjI2NicsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDorqHku7fljZXkvY0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLXJhZGlvLWdyb3VwIHYtbW9kZWw9ImRldmljZURldGFpbC5jaGFyZ2VVbml0IiBkaXNhYmxlZD4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSLnspIiPueykjwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iY3QiPmN0PC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJnIj5nPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgIDwvZWwtcmFkaW8tZ3JvdXA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDljZXku7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnVuaXRQcmljZSIKICAgICAgICAgICAgICAgICAgQGlucHV0PSJwcmljZVRvdGFsIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDluIHnp40KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLXJhZGlvLWdyb3VwCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5jdXJyZW5jeSIKICAgICAgICAgICAgICAgICAgOmRpc2FibGVkPSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IkNOWSI+Q05ZPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJFVVIiPkVVUjwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iVVNEIj5VU0Q8L2VsLXJhZGlvPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IkhLRCI+SEtEPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgIDwvZWwtcmFkaW8tZ3JvdXA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6CiAgICAgICAgICAgICAgICAgICAgaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyAnIzYwNjI2NicKICAgICAgICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlsLmlzVXBkYXRlID09IDAKICAgICAgICAgICAgICAgICAgICAgID8gJyMzZDgyZmUnCiAgICAgICAgICAgICAgICAgICAgICA6ICcjNjA2MjY2JywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmgLvmlbDph48KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iCiAgICAgICAgICAgICAgICAgICAgaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyB0cnVlCiAgICAgICAgICAgICAgICAgICAgICA6IGRldmljZURldGFpbC5pc1VwZGF0ZSA9PSAwCiAgICAgICAgICAgICAgICAgICAgICA/IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICA6IHRydWUKICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwubnVtYmVyIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgICAgPjxpCiAgICAgICAgICAgICAgICAgICAgc2xvdD0ic3VmZml4IgogICAgICAgICAgICAgICAgICAgIHYtaWY9ImRldmljZURldGFpbC5jaGFyZ2VVbml0ID09ICfnspInIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzYwNjI2Njtmb250LXN0eWxlOm5vcm1hbDsiCiAgICAgICAgICAgICAgICAgICAgPnt7IGRldmljZURldGFpbC5jaGFyZ2VVbml0IH19PC9pCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmgLvph43ph48KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLndlaWdodCIKICAgICAgICAgICAgICAgICAgQGlucHV0PSJwcmljZVRvdGFsIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgICAgPjxpCiAgICAgICAgICAgICAgICAgICAgc2xvdD0ic3VmZml4IgogICAgICAgICAgICAgICAgICAgIHYtaWY9ImRldmljZURldGFpbC5jaGFyZ2VVbml0ICE9ICfnspInIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzYwNjI2Njtmb250LXN0eWxlOm5vcm1hbDsiCiAgICAgICAgICAgICAgICAgICAgPnt7IGRldmljZURldGFpbC5jaGFyZ2VVbml0IH19PC9pCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjoKICAgICAgICAgICAgICAgICAgICBpc1VwZGF0ZSA9PSAwCiAgICAgICAgICAgICAgICAgICAgICA/ICcjNjA2MjY2JwogICAgICAgICAgICAgICAgICAgICAgOiBkZXZpY2VEZXRhaWwuaXNVcGRhdGUgPT0gMAogICAgICAgICAgICAgICAgICAgICAgPyAnIzNkODJmZScKICAgICAgICAgICAgICAgICAgICAgIDogJyM2MDYyNjYnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOaAu+S7twogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSIKICAgICAgICAgICAgICAgICAgICBpc1VwZGF0ZSA9PSAwCiAgICAgICAgICAgICAgICAgICAgICA/IHRydWUKICAgICAgICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlsLmlzVXBkYXRlID09IDAKICAgICAgICAgICAgICAgICAgICAgID8gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgIDogdHJ1ZQogICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC50b3RhbFByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGkKICAgICAgICAgICAgICAgICAgICBzbG90PSJzdWZmaXgiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjNjA2MjY2O2ZvbnQtc3R5bGU6bm9ybWFsOyIKICAgICAgICAgICAgICAgICAgICA+e3sgZGV2aWNlRGV0YWlsLmN1cnJlbmN5IH19PC9pCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDpm7bllK7ljZXku7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnJldGFpbFByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmibnlj5HljZXku7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLndob2xlc2FsZVByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlpJbluIHlhZHkurrmsJHluIHmsYfnjocKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnRvdGFsQ25SYXRlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIiB2LXNob3c9ImNlcnRpZmljYXRlc2hvdzIgPT0gZmFsc2UiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmgLvku7fkurrmsJHluIHph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnRvdGFsQ25QcmljZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSIgdi1zaG93PSJjZXJ0aWZpY2F0ZXNob3cyID09IGZhbHNlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5riv5biB5YWR5Lq65rCR5biB5rGH546HCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC50b3RhbEhrUmF0ZSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSIgdi1zaG93PSJjZXJ0aWZpY2F0ZXNob3cyID09IGZhbHNlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5oC75Lu35riv5biB6YeR6aKdCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC50b3RhbEhrUHJpY2UiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIj7lpIfms6jkv6Hmga88L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUtbm90ZSIgaWQ9Im9uZS1ub3RlIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5oiQ5pys5aSH5rOoCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0YXJlYSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnRvdGFsUHJpY2VOb3RlIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLplIDllK7kv6Hmga8iIG5hbWU9InRoaXJkIj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICAgIOmUgOWUruS/oeaBrwogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiA2cHg7Ij4KICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyIKICAgICAgICAgICAgICAgIHRpdGxlPSLkv67mlLnplIDllK7kv6Hmga8iCiAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2hvbWUvdXBkYXRlLnBuZyIKICAgICAgICAgICAgICAgIEBjbGljaz0idXBkYXRlRGV2aWNlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDplIDllK7lkZgKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnNvbGRlciIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOe7hAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwuZ3JvdXAiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDpob7lrqLlp5PlkI0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLmN1c3RvbWVyIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Ye65ZSu5biB56eNCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1yYWRpby1ncm91cAogICAgICAgICAgICAgICAgICBAY2hhbmdlPSJjdXJyZW5jeUNoYW5nZTIiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5zYWxlQ3VycmVuY3kiCiAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJDTlkiPkNOWTwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iRVVSIj5FVVI8L2VsLXJhZGlvPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IlVTRCI+VVNEPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJIS0QiPkhLRDwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICA8L2VsLXJhZGlvLWdyb3VwPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWHuuWUrumHkeminQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgQGlucHV0PSJjdXJyZW5jeUNoYW5nZTIiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnNhbGVNb25leSIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOWkluW4geWFkeS6uuawkeW4geaxh+eOhwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgQGlucHV0PSJ0b3RhbENuUmF0ZUNoYW5nZTIiCiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnRvdGFsVG9DblJhdGUiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDlh7rllK7kurrmsJHluIHph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIDpyZWFkb25seT0iaXNVcGRhdGUgPT0gMCA/IHRydWUgOiBmYWxzZSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlsLnNlbGxUb3RhbENuUHJpY2UiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJvbmUtbGVmdCIKICAgICAgICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICAgICAgICBjb2xvcjogaXNVcGRhdGUgPT0gMCA/ICcjNjA2MjY2JyA6ICcjM2Q4MmZlJywKICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogaXNVcGRhdGUgPT0gMCA/ICdub3JtYWwnIDogJ2JvbGQnLAogICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICDmuK/luIHlhZHkurrmsJHluIHmsYfnjocKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIEBpbnB1dD0idG90YWxIa1JhdGVDaGFuZ2UyIgogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC50b3RhbFRvSGtSYXRlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg5Ye65ZSu5riv5biB6YeR6aKdCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5zZWxsVG90YWxIa1ByaWNlIgogICAgICAgICAgICAgICAgICBjbGVhcmFibGUKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0ib25lLWxlZnQiCiAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgY29sb3I6IGlzVXBkYXRlID09IDAgPyAnIzYwNjI2NicgOiAnIzNkODJmZScsCiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGlzVXBkYXRlID09IDAgPyAnbm9ybWFsJyA6ICdib2xkJywKICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAg6ZSA5ZSu5Y+R56Wo5Y+3CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICA6cmVhZG9ubHk9ImlzVXBkYXRlID09IDAgPyB0cnVlIDogZmFsc2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImRldmljZURldGFpbC5zZWxsQmlsbE51bWJlciIKICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9Im9uZS1sZWZ0IgogICAgICAgICAgICAgICAgOnN0eWxlPSJ7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBpc1VwZGF0ZSA9PSAwID8gJyM2MDYyNjYnIDogJyMzZDgyZmUnLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBpc1VwZGF0ZSA9PSAwID8gJ25vcm1hbCcgOiAnYm9sZCcsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIOmihui0p+S6ugogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJpc1VwZGF0ZSA9PSAwID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWwucmVjZWl2ZXIiCiAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i5Y6G5Y+y6K6w5b2VIiBuYW1lPSJzZWNvbmQiPgogICAgICAgICAgPHAgY2xhc3M9ImZvbnQtdGl0bGUtc3R5bGUiIHN0eWxlPSJtYXJnaW4tdG9wOiAwOyI+CiAgICAgICAgICAgIOadkOaWmeeKtuaAge+8mnt7CiAgICAgICAgICAgICAgZGV2aWNlRGV0YWlsLnN0YXRlID09IDAKICAgICAgICAgICAgICAgID8gIuW6k+WtmOS4rSIKICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlsLnN0YXRlID09IDEKICAgICAgICAgICAgICAgID8gIui/kOi+k+S4rSIKICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlsLnN0YXRlID09IDIKICAgICAgICAgICAgICAgID8gIuWKoOW3peS4rSIKICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlsLnN0YXRlID09IDMKICAgICAgICAgICAgICAgID8gIuWKoOW3peWujOaIkCIKICAgICAgICAgICAgICAgIDogIuW3suWHuuWUriIKICAgICAgICAgICAgfX0KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxlbC10aW1lbGluZT4KICAgICAgICAgICAgPGVsLXRpbWVsaW5lLWl0ZW0KICAgICAgICAgICAgICBjb2xvcj0iIzNkODJmZSIKICAgICAgICAgICAgICBzaXplPSJsYXJnZSIKICAgICAgICAgICAgICB2LWZvcj0iKGFjdGl2aXR5LCBpbmRleCkgaW4gZGV2aWNlRGV0YWlsLnN0b2NrSW5PdXRMaXN0IgogICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogZmxleDthbGlnbi1pdGVtczogY2VudGVyOyI+CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luOjAgMjBweCAxNHB4IDA7d2lkdGg6IDcycHg7Ij4KICAgICAgICAgICAgICAgICAge3sgYWN0aXZpdHkudGltZS5zbGljZSgwLCAxMCkgfX0KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOjAiIHYtaHRtbD0iYWN0aXZpdHkuZGVzY3JpYmUiPjwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8cAogICAgICAgICAgICAgICAgdi1pZj0iYWN0aXZpdHkubm90ZSAhPT0gJyciCiAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luOiAwO2NvbG9yOiM5MTkwOTA7bWFyZ2luLWxlZnQ6OTJweDt3b3JkLWJyZWFrOiBicmVhay1hbGw7d29yZC13cmFwOiBicmVhay13b3JkIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIHt7IGFjdGl2aXR5Lm5vdGUgfX0KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZWwtdGltZWxpbmUtaXRlbT4KICAgICAgICAgIDwvZWwtdGltZWxpbmU+CiAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgPC9lbC10YWJzPgogICAgPC9kaXY+CiAgICA8ZGl2IHNsb3Q9ImZvb3RlciI+CiAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJkaWFsb2dEZXZpY2VEZXRhaWxWaXNpYmxlID0gZmFsc2UiPuWPliDmtog8L2VsLWJ1dHRvbj4KICAgICAgPGVsLWJ1dHRvbiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9Im1hdGVyaWFsU3VyZSI+56GuIOWumjwvZWwtYnV0dG9uPgogICAgPC9kaXY+CiAgPC9lbC1kaWFsb2c+CiAgPGVsLWRpYWxvZwogICAgdi1pZj0iZGlhbG9nRGV2aWNlRGV0YWlsc1Zpc2libGUiCiAgICB0aXRsZT0i5p2Q5paZ5L+h5oGvIgogICAgOnZpc2libGUuc3luYz0iZGlhbG9nRGV2aWNlRGV0YWlsc1Zpc2libGUiCiAgICA6Y2xvc2Utb24tcHJlc3MtZXNjYXBlPSJmYWxzZSIKICAgIDpjbG9zZS1vbi1jbGljay1tb2RhbD0iZmFsc2UiCiAgICA6bW9kYWwtYXBwZW5kLXRvLWJvZHk9ImZhbHNlIgogICAgOmFwcGVuZC10by1ib2R5PSJmYWxzZSIKICAgIHN0eWxlPSJtYXJnaW4tdG9wOjIwcHgiCiAgPgogICAgPGRpdiBpZD0iaW52ZW5Tb21lIj4KICAgICAgPGVsLXRhYnMgc3R5bGU9Im1hcmdpbi10b3A6IDIwcHg7IiB2LW1vZGVsPSJhY3RpdmVOYW1lIj4KICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IuadkOaWmeS/oeaBryIgbmFtZT0iZmYiPgogICAgICAgICAgPHAgY2xhc3M9ImZvbnQtdGl0bGUtc3R5bGUiIHN0eWxlPSJtYXJnaW4tdG9wOiAwOyI+CiAgICAgICAgICAgIOadkOaWmeS/oeaBrwogICAgICAgICAgPC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9udC1kaXYiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDmnZDmlpnlkI3np7AKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5tYXRlcmlhbE5hbWUgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOS7k+W6ky/liqDlt6XljoIKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5zdG9yYWdlTmFtZSB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLWxlZnQiPgogICAgICAgICAgICAgICAg57uf5LiA57yW5Y+3CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIHt7IGRldmljZURldGFpbHMucHJvZHVjdE51bWJlciB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLWxlZnQiPgogICAgICAgICAgICAgICAg5b2i54q2CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIHt7IGRldmljZURldGFpbHMuc2hhcGUgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOS6p+WTgeexu+WeiwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0iZGV2aWNlRGV0YWlscy5wcm9kdWN0VHlwZSIgY2xlYXJhYmxlPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOS6p+WcsAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0iZGV2aWNlRGV0YWlscy5wcm9kdWN0QXJlYSIgY2xlYXJhYmxlPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOWwuuWvuC/mr6vnsbMKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5zaXplIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDpopzoibIKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5jb2xvciB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLWxlZnQiPgogICAgICAgICAgICAgICAg6YWN5a+5CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIHt7IGRldmljZURldGFpbHMucGFpcmVkIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDlk4HotKgKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5xdWFsaXR5IH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDlk4HotKjnu4bliIYKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5zdWJzZWN0aW9uIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDnm5LlrZDnvJblj7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5ib3hOdW1iZXIgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOivgeS5pue8luWPtwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICB7eyBkZXZpY2VEZXRhaWxzLmNlcnRpZmljYXRlTnVtYmVyIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDlj5Hnpajlj7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImRldmljZURldGFpbHMuYmlsbE51bWJlciIgY2xlYXJhYmxlPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIj7lm77niYfkv6Hmga88L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ1cGxvYWQtaW1ncyI+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICBzdHlsZT0iZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlO2ZsZXgtd3JhcDogd3JhcDsiCiAgICAgICAgICAgICAgaWQ9ImRlbEltZyIKICAgICAgICAgICAgICBjbGFzcz0iZGVsSW1nIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgdi1mb3I9IihpbWd1cmwsIGluZGV4KSBvZiBpbWdMaXN0IgogICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6MTBweDtwb3NpdGlvbjpyZWxhdGl2ZTsiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICB2LWlmPSJpbWd1cmwgIT09ICcnICYmIGltZ3VybCAhPT0gbnVsbCIKICAgICAgICAgICAgICAgICAgOnNyYz0iaW1ndXJsLmxlbmd0aCA8IDQyID8gaW1nICsgJy9maWxlLycgKyBpbWd1cmwgOiBpbWd1cmwiCiAgICAgICAgICAgICAgICAgIHdpZHRoPSIxMDBweCIKICAgICAgICAgICAgICAgICAgaGVpZ2h0PSIxMDBweCIKICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6NXB4O29iamVjdC1maXQ6Y292ZXI7IgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIj7lpIfms6jkv6Hmga88L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUtbm90ZSIgaWQ9Im9uZS1ub3RlIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDkuqflk4HlpIfms6gKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHRhcmVhIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWxzLm5vdGUiCiAgICAgICAgICAgICAgICAgIHJlYWRvbmx5CiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLku7fmoLzkv6Hmga8iIG5hbWU9InFxIj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMDsiPgogICAgICAgICAgICDku7fmoLzkv6Hmga8KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbnQtZGl2Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLWxlZnQiPgogICAgICAgICAgICAgICAg6K6h5Lu35Y2V5L2NCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxlbC1yYWRpby1ncm91cAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWxzLmNoYXJnZVVuaXQiCiAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0idHJ1ZSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSLnspIiPueykjwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iY3QiPmN0PC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJnIj5nPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgIDwvZWwtcmFkaW8tZ3JvdXA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDljZXku7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy51bml0UHJpY2UgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOW4geenjQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICA8ZWwtcmFkaW8tZ3JvdXAKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGV2aWNlRGV0YWlscy5jdXJyZW5jeSIKICAgICAgICAgICAgICAgICAgOmRpc2FibGVkPSJ0cnVlIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IkNOWSI+Q05ZPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgICAgPGVsLXJhZGlvIGxhYmVsPSJFVVIiPkVVUjwvZWwtcmFkaW8+CiAgICAgICAgICAgICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iVVNEIj5VU0Q8L2VsLXJhZGlvPgogICAgICAgICAgICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IkhLRCI+SEtEPC9lbC1yYWRpbz4KICAgICAgICAgICAgICAgIDwvZWwtcmFkaW8tZ3JvdXA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDmgLvmlbDph48KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sKICAgICAgICAgICAgICAgICAgZGV2aWNlRGV0YWlscy5jaGFyZ2VVbml0ID09ICLnspIiCiAgICAgICAgICAgICAgICAgICAgPyBkZXZpY2VEZXRhaWxzLm51bWJlciArICIgIiArIGRldmljZURldGFpbHMuY2hhcmdlVW5pdAogICAgICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlscy5udW1iZXIKICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDmgLvph43ph48KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sKICAgICAgICAgICAgICAgICAgZGV2aWNlRGV0YWlscy5jaGFyZ2VVbml0ICE9ICLnspIiCiAgICAgICAgICAgICAgICAgICAgPyBkZXZpY2VEZXRhaWxzLndlaWdodCArICIgIiArIGRldmljZURldGFpbHMuY2hhcmdlVW5pdAogICAgICAgICAgICAgICAgICAgIDogIi0tIgogICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOaAu+S7twogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICB7eyBkZXZpY2VEZXRhaWxzLnRvdGFsUHJpY2UgKyAiICIgKyBkZXZpY2VEZXRhaWxzLmN1cnJlbmN5IH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDpm7bllK7ljZXku7cKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy5yZXRhaWxQcmljZSB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LW9uZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLWxlZnQiPgogICAgICAgICAgICAgICAg5om55Y+R5Y2V5Lu3CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib25lLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIHt7IGRldmljZURldGFpbHMud2hvbGVzYWxlUHJpY2UgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOWkluW4geWFkeS6uuawkeW4geaxh+eOhwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICB7eyBkZXZpY2VEZXRhaWxzLnRvdGFsQ25SYXRlIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDmgLvku7fkurrmsJHluIHph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy50b3RhbENuUHJpY2UgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1sZWZ0Ij4KICAgICAgICAgICAgICAgIOa4r+W4geWFkeS6uuawkeW4geaxh+eOhwogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9uZS1yaWdodCI+CiAgICAgICAgICAgICAgICB7eyBkZXZpY2VEZXRhaWxzLnRvdGFsSGtSYXRlIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtb25lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDmgLvku7fmuK/luIHph5Hpop0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAge3sgZGV2aWNlRGV0YWlscy50b3RhbEhrUHJpY2UgfX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxwIGNsYXNzPSJmb250LXRpdGxlLXN0eWxlIj7lpIfms6jkv6Hmga88L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LWRpdiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdi1vbmUtbm90ZSIgaWQ9Im9uZS1ub3RlIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtbGVmdCI+CiAgICAgICAgICAgICAgICDmiJDmnKzlpIfms6gKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvbmUtcmlnaHQiPgogICAgICAgICAgICAgICAgPGVsLWlucHV0CiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHRhcmVhIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJkZXZpY2VEZXRhaWxzLnRvdGFsUHJpY2VOb3RlIgogICAgICAgICAgICAgICAgICByZWFkb25seQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i5Y6G5Y+y6K6w5b2VIiBuYW1lPSJzcyI+CiAgICAgICAgICA8cCBjbGFzcz0iZm9udC10aXRsZS1zdHlsZSIgc3R5bGU9Im1hcmdpbi10b3A6IDA7Ij4KICAgICAgICAgICAg5p2Q5paZ54q25oCB77yae3sKICAgICAgICAgICAgICBkZXZpY2VEZXRhaWxzLnN0YXRlID09IDAKICAgICAgICAgICAgICAgID8gIuW6k+WtmOS4rSIKICAgICAgICAgICAgICAgIDogZGV2aWNlRGV0YWlscy5zdGF0ZSA9PSAxCiAgICAgICAgICAgICAgICA/ICLov5DovpPkuK0iCiAgICAgICAgICAgICAgICA6IGRldmljZURldGFpbHMuc3RhdGUgPT0gMgogICAgICAgICAgICAgICAgPyAi5Yqg5bel5LitIgogICAgICAgICAgICAgICAgOiBkZXZpY2VEZXRhaWxzLnN0YXRlID09IDMKICAgICAgICAgICAgICAgID8gIuWKoOW3peWujOaIkCIKICAgICAgICAgICAgICAgIDogIuW3suWHuuWUriIKICAgICAgICAgICAgfX0KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxlbC10aW1lbGluZT4KICAgICAgICAgICAgPGVsLXRpbWVsaW5lLWl0ZW0KICAgICAgICAgICAgICBjb2xvcj0iIzNkODJmZSIKICAgICAgICAgICAgICBzaXplPSJsYXJnZSIKICAgICAgICAgICAgICB2LWZvcj0iKGFjdGl2aXR5LCBpbmRleCkgaW4gZGV2aWNlRGV0YWlscy5zdG9ja0luT3V0TGlzdCIKICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7YWxpZ24taXRlbXM6IGNlbnRlcjsiPgogICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbjowIDIwcHggMTRweCAwO3dpZHRoOiA3MnB4OyI+CiAgICAgICAgICAgICAgICAgIHt7IGFjdGl2aXR5LnRpbWUuc2xpY2UoMCwgMTApIH19CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDowIiB2LWh0bWw9ImFjdGl2aXR5LmRlc2NyaWJlIj48L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAKICAgICAgICAgICAgICAgIHYtaWY9ImFjdGl2aXR5Lm5vdGUgIT09ICcnIgogICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbjogMDtjb2xvcjojOTE5MDkwO21hcmdpbi1sZWZ0OjkycHg7d29yZC1icmVhazogYnJlYWstYWxsO3dvcmQtd3JhcDogYnJlYWstd29yZCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICB7eyBhY3Rpdml0eS5ub3RlIH19CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2VsLXRpbWVsaW5lLWl0ZW0+CiAgICAgICAgICA8L2VsLXRpbWVsaW5lPgogICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgIDwvZWwtdGFicz4KICAgIDwvZGl2PgogICAgPGRpdiBzbG90PSJmb290ZXIiPgogICAgICA8ZWwtYnV0dG9uIEBjbGljaz0iZGlhbG9nRGV2aWNlRGV0YWlsc1Zpc2libGUgPSBmYWxzZSI+5Y+WIOa2iDwvZWwtYnV0dG9uPgogICAgICA8ZWwtYnV0dG9uIHR5cGU9InByaW1hcnkiIEBjbGljaz0iZGlhbG9nRGV2aWNlRGV0YWlsc1Zpc2libGUgPSBmYWxzZSIKICAgICAgICA+56GuIOWumjwvZWwtYnV0dG9uCiAgICAgID4KICAgIDwvZGl2PgogIDwvZWwtZGlhbG9nPgogIDxlbC1kaWFsb2cKICAgIHRpdGxlPSLorr7orqHnqL/liJfooagiCiAgICA6dmlzaWJsZS5zeW5jPSJjaG9vc2VpbWdzaG93IgogICAgOmFwcGVuZC10by1ib2R5PSJmYWxzZSIKICAgIDpjbG9zZS1vbi1wcmVzcy1lc2NhcGU9ImZhbHNlIgogICAgOmNsb3NlLW9uLWNsaWNrLW1vZGFsPSJmYWxzZSIKICAgIDpiZWZvcmUtY2xvc2U9ImhhbmRsZUNsb3NlIgogICAgOm1vZGFsLWFwcGVuZC10by1ib2R5PSJmYWxzZSIKICAgIHdpZHRoPSI0MCUiCiAgPgogICAgPGRpdiBzdHlsZT0iZGlzcGxheTpmbGV4O3BhZGRpbmc6IDMwcHggMjBweCAwIDIwcHg7Ij4KICAgICAgPGVsLWlucHV0CiAgICAgICAgcGxhY2Vob2xkZXI9Iuivt+i+k+WFpeiuvuiuoeW4iO+8jOiuvuiuoeWQjeensCIKICAgICAgICB2LW1vZGVsPSJkZXNpZ25MaXN0S2V5d29yZCIKICAgICAgPjwvZWwtaW5wdXQKICAgICAgPjxlbC1idXR0b24gc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyIgQGNsaWNrPSJnZXRwcm9kdWNpYmxlRGVzaWduTGlzdCIKICAgICAgICA+5pCc57SiPC9lbC1idXR0b24KICAgICAgPgogICAgPC9kaXY+CiAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nOiAyMHB4OyI+CiAgICAgIDxlbC1yYWRpby1ncm91cAogICAgICAgIHYtbW9kZWw9InN0YXR1c0Rlc2lnbiIKICAgICAgICBAY2hhbmdlPSJnZXRwcm9kdWNpYmxlRGVzaWduTGlzdCIKICAgICAgPgogICAgICAgIDxlbC1yYWRpbyBsYWJlbD0iMCI+5YWo6YOoPC9lbC1yYWRpbz4KICAgICAgICA8ZWwtcmFkaW8gbGFiZWw9IjEiPuacqueUn+S6pzwvZWwtcmFkaW8+CiAgICAgIDwvZWwtcmFkaW8tZ3JvdXA+CiAgICA8L2Rpdj4KICAgIDxlbC10YWJsZQogICAgICA6ZGF0YT0icHJvZHVjaWJsZURlc2lnbkxpc3QiCiAgICAgIHN0eWxlPSJ3aWR0aDogOTAlO21hcmdpbjphdXRvOyIKICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgIGJvcmRlcgogICAgICBAY3VycmVudC1jaGFuZ2U9ImNob29zZWltZ2xpc3QiCiAgICAgIHJlZj0ibXVsdGlwbGVUYWJsZURlc2lnbiIKICAgID4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiBwcm9wPSJuYW1lIiBsYWJlbD0i6K6+6K6h5ZCN56ewIj4gPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0iZGVzaWduZXJOYW1lIiBsYWJlbD0i6K6+6K6h5biI5ZCN56ewIj4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gcHJvcD0iZGVzaWduSWQiIGxhYmVsPSLorr7orqHlm77niYciPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIHYtaW1hZ2UtcHJldmlldwogICAgICAgICAgICA6c3JjPSJpbWcgKyAnL2ZpbGUvJyArIGZpcnN0aW1nKHNjb3BlLnJvdy5pbWcpIgogICAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMHB4O2hlaWdodDogMTAwcHg7b2JqZWN0LWZpdDogY292ZXI7IgogICAgICAgICAgLz4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgIDwvZWwtdGFibGU+CiAgICA8ZGl2IHNsb3Q9ImZvb3RlciI+CiAgICAgIDxlbC1idXR0b24gdHlwZT0icHJpbWFyeSIgQGNsaWNrPSJjaG9vc2VpbWdzaG93ID0gZmFsc2UiCiAgICAgICAgPuehriDlrpo8L2VsLWJ1dHRvbgogICAgICA+CiAgICA8L2Rpdj4KICA8L2VsLWRpYWxvZz4KPC9kaXY+Cg=="},null]}