{"remainingRequest":"H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\src\\components\\ProductDelivery-management.vue?vue&type=template&id=5f5b6ff8&scoped=true&","dependencies":[{"path":"H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\src\\components\\ProductDelivery-management.vue","mtime":1625133252654},{"path":"H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\WeChat\\WeChat Files\\wxid_57pmtt9pto6922\\FileStorage\\File\\2021-06\\jewelry-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}