{"remainingRequest":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\src\\components\\Stock-pending.vue?vue&type=style&index=0&id=a219fc40&lang=scss&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\src\\components\\Stock-pending.vue","mtime":1622790099298},{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\jewelry\\a\\jewelry-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3RvY2stcGVuZGluZy1jb250YWluZXIgewogIHBhZGRpbmc6IDIwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQo="},{"version":3,"sources":["Stock-pending.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA;AACA;AACA;AACA","file":"Stock-pending.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"stock-pending-container\">\r\n    <!-- <h1>待入库</h1> -->\r\n    <div style=\"display:flex;justify-content: space-between;\">\r\n      <el-form :inline=\"true\" label-width=\"130px\">\r\n        <el-form-item label=\"收货仓库/加工厂：\">\r\n          <el-select v-model=\"storageIdList\" placeholder=\"可多选\" multiple @change=\"keywordChange\">\r\n            <el-option v-for=\"item in materialFilterList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"出库时间：\">\r\n          <el-date-picker v-model=\"time\" type=\"daterange\" range-separator=\"至\" start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\" format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\" clearable @change=\"keywordChange\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <div style=\"display: flex;\">\r\n            <el-input style=\"width: 330px;\" v-model=\"keyword\" @change=\"keywordChange\" placeholder=\"可输入材料名称、统一编号、备注进行搜索\"\r\n              clearable>\r\n            </el-input>\r\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"getStockMaterialList\">查 询</el-button>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div>\r\n        <el-button type=\"primary\" @click=\"stockOut\">入 库</el-button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <el-table style=\"width: 70%;\" ref=\"multipleTable\" :data=\"listPage\" :row-key=\"getRowKeys\" tooltip-effect=\"dark\"\r\n        border @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" :reserve-selection=\"true\" width=\"55\" align=\"center\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"storageName\" label=\"仓库/加工厂\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"materialName\" label=\"材料名称\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"productNumber\" label=\"统一编号\">\r\n        </el-table-column>\r\n        <el-table-column label=\"单价\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span>{{scope.row.unitPrice + ' ' + scope.row.currency}}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"发货总数量\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span>{{scope.row.chargeUnit !== '粒' ? scope.row.number : scope.row.number + ' ' + scope.row.chargeUnit}}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"发货总重量\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span>{{scope.row.chargeUnit == '粒' ? scope.row.weight : scope.row.weight + ' ' + scope.row.chargeUnit}}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"width: 100%;height: 50px;\">\r\n        <div style=\"margin:15px 0;position:absolute;right:32%;\">\r\n          <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"page\"\r\n            layout=\"total, prev, pager, next, jumper\" :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        storageIdList: [],\r\n        materialList: [],\r\n        materialFilterList: [],\r\n        warehouseFactoryList: [],\r\n        time: null,\r\n        keyword: '',\r\n        total: 0,\r\n        page: 1,\r\n        pageNum: 5,\r\n        stockPendingList: [],\r\n        listPage: [],\r\n\r\n        multipleSelection: [],\r\n\r\n      }\r\n    },\r\n    created() {\r\n      this.getMaterialList();\r\n      this.getStockMaterialList();\r\n      this.$axios.post(this.$store.state.baseUrl + '/materialTransportList', {\r\n        startStorageIdList: [],\r\n        startTime: '',\r\n        endTime: '',\r\n        keyword: ''\r\n      }).then((res) => {\r\n        console.log('待入库列表');\r\n        console.log(res);\r\n        this.warehouseFactoryList = res.data.warehouseFactoryList;\r\n        this.getWarehouseList();\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    methods: {\r\n      stockOut() {\r\n        console.log(this.multipleSelection);\r\n        let list = [];\r\n        for (const iterator of this.multipleSelection) {\r\n          list.push(iterator.id);\r\n        };\r\n        if (this.multipleSelection.length == 0) {\r\n          this.$message.warning({\r\n            message: '请选择入库材料',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n        } else {\r\n          this.$axios.post(this.$store.state.baseUrl + '/checkMaterial', {\r\n            idList: list\r\n          }).then(res => {\r\n            console.log('入库');\r\n            console.log(res);\r\n            this.$message.success({\r\n              message: '入库成功',\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n            this.multipleSelection.length = 0;\r\n            this.$refs.multipleTable.clearSelection();\r\n            console.log(this.multipleSelection);\r\n            this.getStockMaterialList();\r\n          }).catch(err => {\r\n            console.log(err);\r\n            this.$message.error({\r\n              message: err.data.message,\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n          })\r\n        }\r\n      },\r\n      getRowKeys(row) {\r\n        return row.id\r\n      },\r\n      // 选择入库材料\r\n      handleSelectionChange(val) {\r\n        this.multipleSelection = val;\r\n        console.log(this.multipleSelection);\r\n      },\r\n      // 获取待入库列表\r\n      getStockMaterialList() {\r\n        this.stockPendingList = [];\r\n        this.$axios.post(this.$store.state.baseUrl + '/materialTransportList', {\r\n          startStorageIdList: this.storageIdList,\r\n          startTime: this.time == null ? '' : this.time[0],\r\n          endTime: this.time == null ? '' : this.time[1],\r\n          keyword: this.keyword,\r\n          page: this.page,\r\n          pageNum: this.pageNum\r\n        }).then((res) => {\r\n          console.log('待入库列表');\r\n          console.log(res);\r\n          this.total = res.data.total;\r\n          for (const item of res.data.warehouseFactoryList) {\r\n            this.stockPendingList = this.stockPendingList.concat(item.materialList);\r\n          };\r\n          console.log(this.stockPendingList);\r\n          this.getList();\r\n        }).catch((err) => {\r\n          console.log(err);\r\n        });\r\n      },\r\n      // 提取仓库/加工厂列表\r\n      getWarehouseList() {\r\n        console.log('仓库/加工厂列表');\r\n        this.materialFilterList = [];\r\n        for (let i = 0; i < this.warehouseFactoryList.length; i++) {\r\n          // console.log(this.warehouseFactoryList[i]);\r\n          this.materialFilterList.push({\r\n            id: this.warehouseFactoryList[i].storageId,\r\n            name: this.warehouseFactoryList[i].storageName\r\n          });\r\n        };\r\n        console.log(this.materialFilterList);\r\n      },\r\n      keywordChange() {\r\n        this.page = 1;\r\n      },\r\n      // 获取原材料名称列表\r\n      getMaterialList() {\r\n        this.$axios.post(this.$store.state.baseUrl + '/materialList').then(res => {\r\n          console.log('原材料');\r\n          console.log(res);\r\n          this.materialList = res.data;\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      },\r\n      // 分页处理数据\r\n      getList() {\r\n        console.log('分页数据');\r\n        this.listPage = [];\r\n        console.log(this.stockPendingList);\r\n        this.total = this.stockPendingList.length;\r\n        // es6过滤得到满足搜索条件的展示数据list\r\n        this.listPage = this.stockPendingList.filter((item, index) =>\r\n          index < this.page * this.pageNum && index >= this.pageNum * (this.page - 1)\r\n        );\r\n        console.log(this.listPage);\r\n      },\r\n      // 分页\r\n      handleCurrentChange(val) {\r\n        console.log(`当前页: ${val}`);\r\n        this.page = val;\r\n        this.getList();\r\n        (function smoothscroll() {\r\n          let currentScroll =\r\n            document.documentElement.scrollTop || document.body.scrollTop;\r\n          if (currentScroll > 0) {\r\n            window.requestAnimationFrame(smoothscroll);\r\n            window.scrollTo(0, currentScroll - currentScroll / 5);\r\n          }\r\n        })();\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .stock-pending-container {\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n    text-align: left;\r\n  }\r\n</style>"]}]}